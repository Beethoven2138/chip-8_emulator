#ifndef CHIP8_H
#define CHIP8_H

#include <string.h>
#include <stdio.h>
#include <stdlib.h>

class CHIP
{
private:
	unsigned short opcode; /*2 byte opcode*/
	unsigned char memory[4096]; /*4k of memory*/
	unsigned char V[16]; /*8-bit registers*/
	unsigned short I; /*index register*/
	unsigned short pc; /*program counter*/
	unsigned char gfx[64 * 32]; /*64 by 32 black and white screen*/
	unsigned char delay_timer; /*for timing game events*/
	unsigned char sound_timer; /*for sound effects*/
	unsigned short stack[16]; /*16-level stack for storing return addresses*/
	unsigned short sp; /*stack pointer*/
	unsigned char key[16]; /*hex keyboard*/

	unsigned char chip8_fontset[80] =
	{ 
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};
public:
        CHIP(char *rom);
	~CHIP();
	void emulate_cycle();
	void draw_graphics();
	void set_key();
};

#endif
